name: Test and deploy
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'fix/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.17.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Type check
        run: yarn type-check

      - name: Check linting
        run: yarn lint

      - name: Run the tests
        run: yarn test

  deploy:
    needs: [lint-and-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.17.x]

    steps:
      - uses: actions/checkout@v3
      - name: Cache global modules
        id: cache-global-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-global-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Install Vercel CLI
        if: steps.cache-global-nodemodules.outputs.cache-hit != 'true'
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        # Possible envs => development / preview / production
        run: vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  show-url:
    needs: [deploy]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.17.x]

    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v19
        id: vercel
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.TOKEN_GITHUB }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
